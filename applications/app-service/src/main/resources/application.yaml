server:
  port: 8080
spring:
  application:
    name: "tn-users-mngr"
  devtools:
    add-properties: false
  h2:
    console:
      enabled: true
      path: "/h2"
  redis:
    host: "${REDIS_HOST}"
    port: "${REDIS_PORT}"
springdoc:
  swagger-ui:
    enabled: true
    path: "/api-docs/swagger-ui.html"
  api-docs:
    enabled: true
    path: "/api-docs/users"
adapters:
  r2dbc:
    host: "${DB_HOST}"
    port: "${DB_PORT}"
    database: "${DB_DATABASE}"
    schema: "${DB_SCHEMA}"
    username: "${DB_USERNAME}"
    password: "${DB_USER_PASSWORD}"
management:
  tracing:
    sampling:
      probability: 1.0
    baggage:
      correlation:
        fields:
          - messageId
      remote-fields: messageId
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"
adapter:
  restconsumer:
    timeout: 5000
    url: "${USER_WEB_CLIENT_URL}"
  sqs:
    region: "${AWS_REGION}"
    queueUrl: "${AWS_SQS_URL}"
    endpoint: "${AWS_SQS_ENDPOINT}"
resilience4j:
  circuitbreaker:
    instances:
      testGet:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      testPost:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
